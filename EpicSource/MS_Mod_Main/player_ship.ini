;


; The entries allows adding any number of ship entries below.
; this makes for a nested kind of INI file. Read each ship
; as a string. Then use the string as the key to find the
; rest of the ships properties.

; There can be no skips in the incrementing numbers.
; 
[Entries]
ship[0]=Tug_Basic
ship[1]=StormPetrel
ship[2]=Patcom
ship[3]=Corvette



; This section must allways be here. It dirves the resale value
; of the standard player ship types
; Use tEpicMoney.ShipAccount() and tEpicMoney.ChangeShipAccount(int);

[Resale_Values]
commandsection=0
tug=50000
advancedpatcom=125000
stormpetrel=100000
heavycorvette=150000


[IdentityErase]
cost=1000000


[Tug_Basic]
; These values are text strings that 
; convert into station types. they tell
; the purchasing code where this kind
; of ship can be found.
; When the screen starts, reach each
; ship entry and see if any of these
; types match the station.

; Natural text label for ship. Used in Gui text labels
name="Tug"

; Inventory add function for this ship. It must take no parameters
ship_template="ini:/sims/ships/player/tug_new"

; use tEconUtil.pog to convert from the
; string to a station type.
; iHabitat.Type() will return the station
; type of the station where the player is
; docked.

station[0]="HT_Shipyard"
station[1]="HT_Waystation"
;station[2]="HT_PoliceBase"

; string property with the ships description to
; entice the player to purchase.
html_description="html:/html/tug_basic_info"

; integer property, price of buying the ship
price=100000

standing=FT_Neutral


[StormPetrel]
; Natural text label for ship. Used in Gui text labels
name="Storm Petrel"

ship_template="ini:/sims/ships/player/storm_petrel_new"


station[0]="HT_MercenaryBase"

; string property with the ships description to
; entice the player to purchase.
html_description="html:/html/stormpetrel_info"

; integer property, price of buying the ship
price=200000

standing=FT_Like




[Patcom]
; Natural text label for ship. Used in Gui text labels
name="Patcom"

ship_template="ini:/sims/ships/player/fast_attack_new"


station[0]="HT_SystemDefenceDock"

; string property with the ships description to
; entice the player to purchase.
html_description="html:/html/patcom_info"

; integer property, price of buying the ship
price=250000

; We are going to use it to keep warships out of
; the hands of pirates.
standing=FT_Love




[Corvette]
; Natural text label for ship. Used in Gui text labels
name="Corvette"

ship_template="ini:/sims/ships/player/heavy_corvette_new"

station[0]="HT_SystemDefenceDock"

; string property with the ships description to
; entice the player to purchase.
html_description="html:/html/corvette_info"

; integer property, price of buying the ship
price=300000

; We are going to use it to keep warships out of
; the hands of pirates.
standing=FT_Love



[Tug_Armored]
; These values are text strings that 
; convert into station types. they tell
; the purchasing code where this kind
; of ship can be found.
; When the screen starts, reach each
; ship entry and see if any of these
; types match the station.

; Natural text label for ship. Used in Gui text labels
name="Armored Tug"

ship_template="ini:/sims/ships/player/tug_new"


station[0]="HT_Shipyard"
station[1]="HT_Waystation"

; string property with the ships description to
; entice the player to purchase.
html_description="html:/html/tug_basic_info"

; integer property, price of buying the ship
price=100000

standing=FT_Neutral


