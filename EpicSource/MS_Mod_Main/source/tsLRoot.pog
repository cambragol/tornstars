//*******************************************************************************************/
//
// tsLRoot.pog
//
// This package is the root of the Layered Object package. Layered objects support
// attaching savable property sets to arbitrary objects. 
//
// The Root provides basic services, such as a unique id counter for each new object.
//
// April 2004, Jon Freise
//******************************************************************************************/

package tsLRoot;

uses 
iShip, Global, Object, Sim, Input, iMapEntity, Math, iAI, 
Task, Debug, iFaction, iSim, iFactionScript, iComms, INIFile, iUtilities, iPilotSetup,
iConversation, iFormation, Group, Text, iEmail, State, iTrafficCreation, 
iRangeCheck,iRemotePilot, iRegion, iMissionTracker, iWingmen,
iCargoScript, iShipCreation, iHUD, iScriptedOrders, iStation, 
iStartSystem, iObjectives, iMultiplay, iCutsceneUtilities,
iDirector, iEscort, 
iLagrangePoint, iMusic, iGame, Stream;



provides NewId,
         SetId,
         GetId;

int NewId()
{  
   int id;

   if (Global.Exists("gt_lroot_id_counter")) {
      atomic {
         id = Global.Int("gt_lroot_id_counter");
         ++id;
         Global.SetInt("gt_lroot_id_counter", id);
      }
   }else {
      Global.CreateInt("gt_lroot_id_counter",GA_Write, 100);
      id = 100;
   }

   return id;
}


SetId(hsim item, int id)
{
   if (Object.PropertyExists(item, "gtsLRootId")) {
      Object.SetIntProperty(item, "gtsLRootId", id);
   }else {
      Object.AddIntProperty(item, "gtsLRootId", id);
   }
}


int GetId(hsim item)
{
   return Object.IntProperty(item, "gtsLRootId");
}

/*  
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/
