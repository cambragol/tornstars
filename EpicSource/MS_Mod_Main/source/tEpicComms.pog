//*******************************************************************************************/
//
// tEpicComms.pog
//
// Use this package to allow the player to start a dialog with a ship or station. Useful
// for missions and NPC characters.
// 
// When the player targets the ship and presses the "C" key, the dialog function will
// be called.
//
// May 2003, Jon Freise
//******************************************************************************************/

package tEpicComms;

uses    Sim,
        iShip,
        iSim,
        iPilotSetup,
        Debug,
        Global,
        GUI,
        iDirector,
        iGUI,
        iHUD,
        iHabitat,
        iMapEntity,
        INIFile,
        Input,
        List,
        Object,
        String,
        Task,
        Text;


provides DisplayComms,
         AddComms,
         CommsSource,
         Keypress,
         Setup,
         Test;
         
Setup()
{
   Input.BindKey( "tEpicComms.Keypress", "RequestCommunication" );
}

Keypress()
{
   hship player = iShip.FindPlayerShip();
   hisim target = iShip.CurrentTarget(player);
   string name;
   htask comm_task;

   debug Debug.PrintString("EpicComms: player attempting communication\n");

   if (10km < Sim.DistanceBetween(player, target)) {
      // The player needs to be withing short range scanning distance.
      iHUD.Print("Move Closer");
      iHUD.PlayAudioCue(AC_InvalidInput);
      return;
   }

   if (Object.PropertyExists(target, "tEpicCommsFunction")) {
      name = Object.StringProperty(target, "tEpicCommsFunction");
      if ("" != name) {

         // We have a valid comms function, so start it and hand over control
         atomic {
            comm_task = Task.Start(name);
            Object.AddHandleProperty(comm_task,"tEpicCommsSender",target);
            Task.Detach(comm_task);
         }
         return;
      }
   }

   // Not a valid comms target. So beep at the player to let them know.
   iHUD.PlayAudioCue(AC_InvalidInput);
}
 

hsim CommsSource()
{
   return Sim.Cast(Object.HandleProperty(Task.Current(),"tEpicCommsSender"));
}

// Add a visible comms marker to this sim.
// (might not want this to be added to a station or other obvious 
// comm targets).
DisplayComms(hsim source, bool visible)
{
   iSim.SetMissionCritical( iSim.Cast(source), visible );   

} 

// Add the comms interface to this sim.
//

AddComms(hsim target, string task_name)
{
   if (Object.PropertyExists(target, "tEpicCommsFunction")) {
      Object.SetStringProperty(target, "tEpicCommsFunction",task_name);
   }else {
      Object.AddStringProperty(target, "tEpicCommsFunction",task_name);
   }
}


task Test()
{
   iHUD.PlayAudioCue(AC_ValidInput);
}
/*  
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/
        
        


