//*******************************************************************************************/
//
// tDistance.pog
//
// Creates globals related to distances. Most importantly, culling distances.
// 
//
//
//
// June 2004, Jon Freise
// March 2006, jf reads flux for distances
//******************************************************************************************/

package tDistance;

uses Global,
     INIFile,
     Debug;


provides Init,
         CullingDistance,
         WakingDistance;


Init()
{
   hinifile flux_init = INIFile.Create("ini:/flux");

   float distance, cull;



   debug atomic {
      if (none == flux_init) {
         Debug.PrintString("tDistance error cannot open flux file\n");
      }
   }

   distance = INIFile.Float(flux_init, "icSolarSystem","far_clip", 0);

   debug atomic {
      if (distance < 1) {
         Debug.PrintString("tDistance error invalid far_clip value\n");
      }
   }

   INIFile.Destroy(flux_init);


   // Global.Float("gt_distance_wakeup")
   Global.CreateFloat("gt_distance_wakeup", GA_NoSave|GA_Write, distance);

   // Culling distance is twice far clip distance, which is the sight range.
   cull = distance * 2;

   // Global.Float("gt_distance_culling")
   Global.CreateFloat("gt_distance_culling", GA_NoSave|GA_Write, cull);

   // Trade distance from station
   // Global.Create("gt_distance_trade")
   Global.CreateFloat("gt_distance_trade", GA_NoSave|GA_Write, 20km);

   // Pod counting distance, for tradinge or working with stations
   // Global.Float("gt_distance_trade_pods")
   Global.CreateFloat("gt_distance_trade_pods", GA_NoSave|GA_Write, 50km);
}



float CullingDistance()
{
   return Global.Float("gt_distance_culling");
}



float WakingDistance()
{
   return Global.Float("gt_distance_wakeup");
}

/* 
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/









