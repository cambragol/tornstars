//*******************************************************************************************/
//
// tEpicMain
//
// This package unifies the major Epic components. It handles script.ini calls, and 
// in turn calls the Epic packages.
// 
// This package is a great danger for circular dependency. Try to never call these functions
// directly. Save is the only current exception.
//
// Feb 2003, Jon Freise
//******************************************************************************************/

package tEpicMain;

uses 
   Sim,
   GUI,
   Task,
   State,
   iSim,
   iShip,
   iFactionScript,
   iCargo,
   Debug,
   Text,
   iBaseGUI,
    iLagrangePoint,
   iAI,


   tTime,
   tDistance,
   tMultimod,
   UniGUI,
   UniGUIBase,
   tEpicLFPlus,
   tsFaction,
   tEpicGuiEnum,
   tEpicGui,
   tsShip,
   tDistance,
   tsWingComm,
   tEPlayerWatch,
   tStationEnv,
   tEpicComms,
   tEpicFleetUpkeep,
   tUnderOp,
   tUnderOpSave,
   tLInventory,
   tEconSmall,
   tETradeBuy,
   tETradeSell,
   tEFleetGui,
   tExitGui,
   tStationSave,
   tESysSetup,
   tMusic,
   tMail,
   tNewsNet,
   tShipMail,
   tViewDock,
   tEJump,
   tELpointFind,
   tStationRules,
   tsFleetOpUpdate,
   tsCrewSpeak,
   tRepUpdate,
   tOptionsGui,
   tStartGui,
   tsShipSave,
   tsPlayerSave,
   tEReferenceGui;





provides 
   GameEnter,
   SessionEnter,
   SessionExit,
   BaseEnter,
   BaseExit,
   SpaceEnter,
   SpaceExit,
   FinalSetup,
   SystemEnter,
   SystemExit,
   SaveGame,
   DayUpdate,
   PlayerDocked,
   PlayerUndocked;

  
// Happens after a session start.
// Does not force a new session (very confusing).
GameEnter()
{
   tsPlayerSave.NewGame();
   
   tStationSave.ReadNewStations();

   tUnderOpSave.ReadNewOperations();

   tEJump.StartGame();

   tOptionsGui.NewGame();

   tStartGui.NewGame();

   tsFaction.NewGame();
}




// Happens when the game is started, or loaded.
SessionEnter()
{
   Text.Add("csv:/text/gt_station_types");
   Text.Add("csv:/text/gt_pc_objects");
   Text.Add("csv:/text/player_ship_name");

   tDistance.Init();

   iFactionScript.Initialise();
   tsFaction.SessionStart();

   tTime.InitGlobals();

   tStationSave.SessionStart();
   tUnderOpSave.SessionStart();


   tEpicGui.InitGlobals();

   tETradeBuy.SessionStart();
   tETradeSell.SessionStart();
   tEFleetGui.SessionStart();
   tExitGui.SessionStart();

   tMusic.Init();

   tLInventory.Init();

   tELpointFind.StartSession();

   tEReferenceGui.SessionStart();

}

// Happens when the game is quit, or reloaded.
SessionExit()
{
   Text.Remove("csv:/text/gt_station_types");
   Text.Remove("csv:/text/gt_pc_objects");
   Text.Remove("csv:/text/player_ship_name");

   tETradeBuy.SessionEnd();
   tETradeSell.SessionEnd();
   tEFleetGui.SessionEnd();
   tExitGui.SessionEnd();
   tELpointFind.EndSession();

   tEReferenceGui.SessionEnd();
}

BaseEnter()
{
   tUnderOpSave.BaseEnter();


   iBaseGUI.SetTradeScreenEnabled( false );
   iBaseGUI.SetInventoryScreenEnabled( false );
   iBaseGUI.SetRecyclingScreenEnabled( false );
   iBaseGUI.SetManufacturingScreenEnabled( false );
   iBaseGUI.SetCommsScreenEnabled( false );
   iBaseGUI.SetEncyclopaediaScreenEnabled( false );
   iBaseGUI.SetStatisticsScreenEnabled( false );
   iBaseGUI.SetTriangulationScreenEnabled( false );

}


BaseExit()
{
   tStationSave.BaseExit();
   tUnderOpSave.BaseExit();

   tStationEnv.EnterBase();
   tEconSmall.ExitBase();
}


SpaceEnter()
{
   tsFaction.Init();

   UniGUIBase.EnterSpace();

   tEconSmall.EnterSpace();

   tEpicLFPlus.Initialise();
}


SpaceExit()
{
   tEpicLFPlus.ExitSpace();
}


FinalSetup()
{
   tEPlayerWatch.PlayerWatch();
   tsPlayerSave.Restore();

   tsShipSave.Relink();
   tsWingComm.Setup();
   tEpicComms.Setup();

   tsPlayerSave.RestoreOrders();

   tEconSmall.TestRun();

   tEJump.Init();

   tMail.ReadArchives();

   tShipMail.StartMyMod();

   tsCrewSpeak.Init();

   tStartGui.FinalSetup();
}

SystemEnter()
{
   tStationSave.RestoreAllStations();   

   tUnderOpSave.Restore();


   tESysSetup.UpdateSystem();

   tStationEnv.CallMods();
   tStationEnv.SystemSetup();

   tEconSmall.StartSystem();
   tEPlayerWatch.SystemEnter();

   tMusic.NewSystem();
}

SystemExit()
{



}

SaveGame()
{
   tTime.SaveTime();

   tStationSave.SaveAllStations();
   tsFaction.SaveGame();
   tsPlayerSave.Save();

   tUnderOpSave.Save();


   tMail.SaveArchives();

   // Saves the favorites.
   tEpicLFPlus.ExitSpace();

   tMultimod.SaveGame();
}

DayUpdate()
{
   tStationRules.UpdateAllStations();
   tsFleetOpUpdate.UpdateAll();

   tNewsNet.DayUpdate();
   tEpicFleetUpkeep.RunUpkeep();

   tRepUpdate.Update();
   tMultimod.DayUpdate();
}


// Event called when the player docks to a station.
PlayerDocked()
{
   tViewDock.PlayerDock();
   tMultimod.PlayerDocked();
}


PlayerUndocked()
{
   tMultimod.PlayerUndocked();
}


/*  
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/






