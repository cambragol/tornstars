//[c]//*******************************************************************************************/
//[c]//
//[c]// tEpicMain
//[c]//
//[c]// This package unifies the major Epic components. It handles script.ini calls, and 
//[c]// in turn calls the Epic packages.
//[c]//
//[c]// This package is a great danger for circular dependency. Try to never call these functions
//[c]// directly. Save is the only current exception.
//[c]//
//[c]// Feb 2003, Jon Freise
//[c]//******************************************************************************************/

// Package name
package tEpicMain;

// Imports
uses 
   Sim,
   GUI,
   Task,
   State,
   iSim,
   iShip,
   iFactionScript,
   iCargo,
   Debug,
   Text,
   iBaseGUI,
   iLagrangePoint,
   iAI,


   tTime,
   tDistance,
   tsDebug,
   tMultimod,
   UniGUI,
   UniGUIBase,
   tEpicLFPlus,
   tsFaction,
   tEpicGuiEnum,
   tEpicGui,
   tsShip,
   tDistance,
   tsWingComm,
   tEPlayerWatch,
   tStationEnv,
   tEpicComms,
   tEpicFleetUpkeep,
   tUnderOp,
   tUnderOpSave,
   tLInventory,
   tEconSmall,
   tETradeBuy,
   tETradeSell,
   tEFleetGui,
   tExitGui,
   tStationSave,
   tESysSetup,
   tMusic,
   tMail,
   tNewsNet,
   tShipMail,
   tViewDock,
   tEJump,
   tELpointFind,
   tStationRules,
   tsFleetOpUpdate,
   tsCrewSpeak,
   tRepUpdate,
   tOptionsGui,
   tStartGui,
   tsShipSave,
   tsPlayerSave,
   tsShipCreationEnum,
   tsShipCreation,
   tEReferenceGui,
   tsLoadoutGui,
   tsEquipSell,
   tsEquipBuy;


// Exports
provides 
   GameEnter,
   SessionEnter,
   SessionExit,
   BaseEnter,
   BaseExit,
   SpaceEnter,
   SpaceExit,
   FinalSetup,
   SystemEnter,
   SystemExit,
   SaveGame,
   DayUpdate,
   PlayerDocked,
   PlayerUndocked;


// Prototypes
prototype GameEnter();
prototype SessionEnter();
prototype SessionExit();
prototype BaseEnter();
prototype BaseExit();
prototype SpaceEnter();
prototype SpaceExit();
prototype FinalSetup();
prototype SystemEnter();
prototype SystemExit();
prototype SaveGame();
prototype DayUpdate();
prototype PlayerDocked();
prototype PlayerUndocked();


// Happens after a session start.
// Does not force a new session (very confusing).
//[of]:GameEnter()
GameEnter()
{
   atomic debug Debug.PrintString("tEpicMain.GameEnter\n");

   tsDebug.NewGame();

   tsPlayerSave.NewGame();
   
   tStationSave.ReadNewStations();

   tUnderOpSave.ReadNewOperations();

   tEJump.StartGame();

   tOptionsGui.NewGame();

   tStartGui.NewGame();

   tsFaction.NewGame();
}
//[cf]

// Happens when the game is started, or loaded.
//[of]:SessionEnter()
SessionEnter()
{
   atomic debug Debug.PrintString("tEpicMain.SessionEnter\n");

   Text.Add("csv:/text/gt_station_types");
   Text.Add("csv:/text/gt_pc_objects");
   Text.Add("csv:/text/player_ship_name");

   tDistance.Init();

   iFactionScript.Initialise();
   tsFaction.SessionStart();

   tTime.InitGlobals();

   tStationSave.SessionStart();
   tUnderOpSave.SessionStart();


   tEpicGui.InitGlobals();

   tETradeBuy.SessionStart();
   tETradeSell.SessionStart();
   tEFleetGui.SessionStart();
   tExitGui.SessionStart();

   tMusic.Init();

   tLInventory.Init();

   tELpointFind.StartSession();

   tEReferenceGui.SessionStart();

   tsLoadoutGui.SessionStart();

   tsEquipBuy.SessionStart();
   tsEquipSell.SessionStart();   
}
//[cf]

// Happens when the game is quit, or reloaded.
//[of]:SessionExit()
SessionExit()
{
   atomic debug Debug.PrintString("tEpicMain.SessionExit\n");

   Text.Remove("csv:/text/gt_station_types");
   Text.Remove("csv:/text/gt_pc_objects");
   Text.Remove("csv:/text/player_ship_name");

   tETradeBuy.SessionEnd();
   tETradeSell.SessionEnd();
   tEFleetGui.SessionEnd();
   tExitGui.SessionEnd();
   tELpointFind.EndSession();

   tEReferenceGui.SessionEnd();

   tsLoadoutGui.SessionEnd();

   tsEquipBuy.SessionEnd();
   tsEquipSell.SessionEnd();
}
//[cf]


//[of]:BaseEnter()
BaseEnter()
{
   atomic debug Debug.PrintString("tEpicMain.BaseEnter\n");

   tUnderOpSave.BaseEnter();


   iBaseGUI.SetTradeScreenEnabled( false );
   iBaseGUI.SetInventoryScreenEnabled( false );
   iBaseGUI.SetRecyclingScreenEnabled( false );
   iBaseGUI.SetManufacturingScreenEnabled( false );
   iBaseGUI.SetCommsScreenEnabled( false );
   iBaseGUI.SetEncyclopaediaScreenEnabled( false );
   iBaseGUI.SetStatisticsScreenEnabled( false );
   iBaseGUI.SetTriangulationScreenEnabled( false );

}
//[cf]


//[of]:BaseExit()
BaseExit()
{
   atomic debug Debug.PrintString("tEpicMain.BaseExit\n");

   tStationSave.BaseExit();
   tUnderOpSave.BaseExit();

   tStationEnv.EnterBase();
   tEconSmall.ExitBase();
}
//[cf]


//[of]:SpaceEnter()
SpaceEnter()
{
   atomic debug Debug.PrintString("tEpicMain.SpaceEnter\n");

   UniGUIBase.EnterSpace();

   tEconSmall.EnterSpace();

   tEpicLFPlus.Initialise();
}
//[cf]


//[of]:SpaceExit()
SpaceExit()
{
   atomic debug Debug.PrintString("tEpicMain.SpaceExit\n");

   tEpicLFPlus.ExitSpace();
}
//[cf]


//[of]:FinalSetup()
FinalSetup()
{
   atomic debug Debug.PrintString("tEpicMain.FinalSetup\n");

   tEPlayerWatch.PlayerWatch();
   tsPlayerSave.Restore();

   tsShipSave.Relink();
   tsWingComm.Setup();
   tEpicComms.Setup();

   tsPlayerSave.RestoreOrders();

   tEconSmall.TestRun();

   tEJump.Init();

   tMail.ReadArchives();

   tShipMail.StartMyMod();

   tsLoadoutGui.AttachCargoHardpoint();

   tsCrewSpeak.Init();

   tStartGui.FinalSetup();
}
//[cf]


//[of]:SystemEnter()
SystemEnter()
{
   atomic debug Debug.PrintString("tEpicMain.SystemEnter\n");

   tsFaction.Init();

   tsShipCreation.Init();

   tStationSave.RestoreAllStations();   

   tUnderOpSave.Restore();

   tESysSetup.UpdateSystem();

   tStationEnv.CallMods();
   tStationEnv.SystemSetup();

   tEconSmall.StartSystem();
   tEPlayerWatch.SystemEnter();

   tMusic.NewSystem();
}
//[cf]


//[of]:SystemExit()
SystemExit()
{
   atomic debug Debug.PrintString("tEpicMain.SystemExit\n");
}
//[cf]


//[of]:SaveGame()
SaveGame()
{
   atomic debug Debug.PrintString("tEpicMain.SaveGame\n");

   tTime.SaveTime();

   tStationSave.SaveAllStations();
   tsFaction.SaveGame();
   tsPlayerSave.Save();

   tUnderOpSave.Save();


   tMail.SaveArchives();

   // Saves the favorites.
   tEpicLFPlus.ExitSpace();

   tMultimod.SaveGame();
}
//[cf]


//[of]:DayUpdate()
DayUpdate()
{
   atomic debug Debug.PrintString("tEpicMain.DayUpdate\n");

   tStationRules.UpdateAllStations();
   tsFleetOpUpdate.UpdateAll();

   tNewsNet.DayUpdate();
   tEpicFleetUpkeep.RunUpkeep();

   tRepUpdate.Update();
   tMultimod.DayUpdate();
}
//[cf]


// Event called when the player docks to a station.
//[of]:PlayerDocked()
PlayerDocked()
{
   atomic debug Debug.PrintString("tEpicMain.PlayerDocked\n");

   tViewDock.PlayerDock();
   tMultimod.PlayerDocked();
}
//[cf]


//[of]:PlayerUndocked()
PlayerUndocked()
{
   atomic debug Debug.PrintString("tEpicMain.PlayerUndocked\n");

   tMultimod.PlayerUndocked();
}
//[cf]


/*  
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/






