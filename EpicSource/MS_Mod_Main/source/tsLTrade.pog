//*******************************************************************************************/
//
// tsLTrade.pog
//
// This package implements a trade layer interface for connecting the Trade GUIs.
// 
//
//  
// 
//
// May 2005, Jon Freise
//******************************************************************************************/

package tsLTrade;

uses 
iShip, Global, Object, Sim, Input, iMapEntity, Math, iAI, 
Task, Debug, iFaction, iSim, iFactionScript, iComms, INIFile, iUtilities, iPilotSetup,
iConversation, iFormation, Group, Text, iEmail, State, iTrafficCreation, 
iRangeCheck,iRemotePilot, iRegion, iMissionTracker, iWingmen,
iCargoScript, iShipCreation, iHUD, iScriptedOrders, iStation, 
iStartSystem, iObjectives, iMultiplay, iCutsceneUtilities,
iDirector, iEscort, 
iLagrangePoint, iMusic, iGame, Stream,
   tsLRoot;


provides Create,
         Save,
         Restore,
         TradeFile,
         SetTradeFile,
         KeyName,
         SetKeyName,
         IsTradeCenter;


prototype string KeyName(hisim producer);
prototype SetKeyName(hisim producer, string key_name);

prototype string TradeFile(hisim producer);
prototype SetTradeFile(hisim producer, string trade_file);



Create(hisim producer, string trade_filename, string key_name)
{
   Object.AddStringProperty(producer,"gtsLTradeFile", "");
   Object.AddStringProperty(producer,"gtsLTradeKey", "");

   SetTradeFile(producer, trade_filename);
   SetKeyName(producer, key_name);
}





Save(hisim producer)
{
   int id = tsLRoot.GetId(producer);
   string key_name, file_name;
   
   key_name = KeyName(producer);
   file_name = TradeFile(producer);

   Global.CreateString(String.FormatInt("gt_ltrade%d_key",id),GA_Write, key_name);
   Global.CreateString(String.FormatInt("gt_ltrade%d_file",id),GA_Write, file_name);
}




Restore(hisim producer)
{  
   int id = tsLRoot.GetId(producer);
   string key_name, file_name;

   key_name = Global.String(String.FormatInt("gt_ltrade%d_key",id));
   Global.Destroy(String.FormatInt("gt_ltrade%d_key",id));

   file_name = Global.String(String.FormatInt("gt_ltrade%d_file",id));
   Global.Destroy(String.FormatInt("gt_ltrade%d_file",id));

   Create(producer, file_name, key_name);
}


string KeyName(hisim producer)
{
   return Object.StringProperty(producer,"gtsLTradeKey");
}

SetKeyName(hisim producer, string key_name)
{
   Object.SetStringProperty(producer,"gtsLTradeKey", key_name); 
}

SetTradeFile(hisim producer, string trade_file)
{
   Object.SetStringProperty(producer,"gtsLTradeFile", trade_file); 
}

string TradeFile(hisim producer)
{
   return Object.StringProperty(producer,"gtsLTradeFile");
}

bool IsTradeCenter(hisim producer)
{
   return Object.PropertyExists(producer, "gtsLTradeFile");
}
/*  
THIS MOD IS NOT MADE, DISTRIBUTED, OR SUPPORTED BY INFOGRAMES
OR PARTICLE SYSTEMS LTD. 

ELEMENTS TM & (C) INFOGRAMES AND PARTICLE SYSTEMS LTD.
*/
